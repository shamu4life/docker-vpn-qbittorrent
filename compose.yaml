# This is the main block that defines all the containers (services) in your stack.
services:

  # This service is the VPN gateway for your other applications.
  gluetun:
    # Specifies the Docker image to use for the VPN container.
    image: qmcgaw/gluetun
    # Grants the container advanced networking capabilities required to create a VPN tunnel.
    cap_add:
      - NET_ADMIN
    # Passes the host's TUN device into the container, which is necessary for the VPN interface.
    devices:
      - /dev/net/tun:/dev/net/tun
    # Exposes ports to the host machine for services running behind the VPN.
    ports:
      - ${QBIT_WEBUI_PORT}:${QBIT_WEBUI_PORT}/tcp
      - ${JACKETT_PORT}:${JACKETT_PORT}/tcp
      - ${FLARESOLVERR_PORT}:${FLARESOLVERR_PORT}/tcp
      # File Browser port removed from here
    # Mounts host directories into the container for persistent data.
    volumes:
      # Stores Gluetun's own configuration files.
      - ${CONFIG_PATH}/gluetun:/gluetun
      # Mounts the local script into the container (read-only).
      - ./update-qbittorrent.sh:/tmp/update-port.sh:ro
    # Sets environment variables to configure the service.
    environment:
      # --- VPN Selection ---
      VPN_SERVICE_PROVIDER: ${VPN_PROVIDER}
      VPN_TYPE: ${VPN_TYPE}
      # --- OpenVPN Credentials (ignored if VPN_TYPE is not openvpn) ---
      OPENVPN_USER: ${OPENVPN_USER}
      OPENVPN_PASSWORD: ${OPENVPN_PASSWORD}
      OPENVPN_PROTOCOL: ${OPENVPN_PROTOCOL}
      # --- WireGuard Credentials (ignored if VPN_TYPE is not wireguard) ---
      WIREGUARD_PRIVATE_KEY: ${WIREGUARD_PRIVATE_KEY}
      WIREGUARD_ADDRESSES: ${WIREGUARD_ADDRESSES}
      # --- General VPN Settings ---
      PORT_FORWARD_ONLY: ${PORT_FORWARD_ONLY}
      VPN_PORT_FORWARDING: ${VPN_PORT_FORWARDING}
      SERVER_COUNTRIES: ${SERVER_COUNTRIES}
      TZ: ${TZ}
      DISABLE_IPV6: ${DISABLE_IPV6}
      # --- Script Integration ---
      VPN_PORT_FORWARDING_UP_COMMAND: /tmp/update-port.sh
      QBIT_WEBUI_PORT: ${QBIT_WEBUI_PORT}
      QBITTORRENT_USER: ${QBITTORRENT_USER}
      QBITTORRENT_PASSWORD: ${QBITTORRENT_PASSWORD}
      SCRIPT_NOTIFY_URL: ${SCRIPT_NOTIFY_URL}
    # Defines a command to check if the container is healthy.
    healthcheck:
      test: ["CMD", "/gluetun-entrypoint", "healthcheck"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # Ensures the container restarts automatically unless you manually stop it.
    restart: unless-stopped
    # A label used by Watchtower to identify this container as part of the managed scope.
    labels:
      - "com.centurylinklabs.watchtower.scope=torrent-stack"

  # This service solves Cloudflare challenges for other applications.
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    environment:
      TZ: ${TZ}
      LOG_LEVEL: info
    volumes:
      - ${CONFIG_PATH}/flaresolverr:/config
    # Forces this container to use Gluetun's network stack, routing all traffic through the VPN.
    network_mode: service:gluetun
    # Prevents this container from starting until the 'gluetun' service is 'healthy'.
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.scope=torrent-stack"

  # The qBittorrent client.
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    network_mode: service:gluetun
    environment:
      WEBUI_PORT: ${QBIT_WEBUI_PORT}
      # Sets the user and group ID for file permissions.
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      # Bypasses authentication for requests from any IP (useful in this network setup).
      WEBUI_BYPASS_AUTH_SUBNETS: 0.0.0.0/0
      # Automatically installs the VueTorrent web UI theme.
      DOCKER_MODS: ghcr.io/vuetorrent/vuetorrent-lsio-mod:latest
    volumes:
      - ${CONFIG_PATH}/qbittorrent:/config
      - ${DOWNLOADS_PATH}:/downloads
      - ${INCOMPLETE_DOWNLOADS}:/downloads/incomplete
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.scope=torrent-stack"
  
  # The Jackett indexer proxy.
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    volumes:
      - ${CONFIG_PATH}/jackett:/config
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.scope=torrent-stack"

  # This service automatically updates your other containers to the latest image.
  watchtower:
    image: containrrr/watchtower
    # Gives Watchtower access to the Docker daemon to manage other containers.
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    # Configures notifications, timezone, scope, and scheduling.
    environment:
      WATCHTOWER_NOTIFICATION_URL: ${WATCHTOWER_NOTIFICATION_URL}
      WATCHTOWER_NOTIFICATION_LEVEL: ${WATCHTOWER_NOTIFICATION_LEVEL}
      WATCHTOWER_NOTIFICATION_TITLE_TAG: ${WATCHTOWER_NOTIFICATION_TITLE_TAG}
      TZ: ${TZ}
      WATCHTOWER_SCOPE: torrent-stack
      WATCHTOWER_SCHEDULE: ${WATCHTOWER_SCHEDULE}
    # Command-line flags for Watchtower. --cleanup removes old images.
    command: --cleanup
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.scope=torrent-stack"

  # This service provides a web-based file manager.
  filebrowser:
    image: ghcr.io/gtsteffaniak/filebrowser
    environment:
      TZ: ${TZ}
    # --- CHANGES START HERE ---
    ports:
      - ${FILEBROWSER_PORT}:80/tcp
    # 'network_mode' and 'depends_on' removed to make it independent.
    # --- CHANGES END HERE ---
    volumes:
      # Stores File Browser's own configuration.
      - ${CONFIG_PATH}/filebrowser:/config
      # Makes your downloads folder available to browse at /srv/downloads.
      - ${DOWNLOADS_PATH}:/srv/downloads
      # Makes your stack's configs folder available to browse at /srv/configs.
      - ${CONFIG_PATH}:/srv/configs
      # Mounts the entire project directory to /srv/stack.
      - ./:/srv/stack
    restart: unless-stopped
    labels:
      - "com.centurylinklabs.watchtower.scope=torrent-stack"
